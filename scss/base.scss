@import "reset.css";

//	media queries
//	@mixin breakpoint($desktop) {
//		desktop styles go here!
//	}
//	i stole this from guff
////////////////////////////////////////////////////////////////////////////////
@mixin breakpoint($querystring) {
	@media #{$querystring} {
		@content;
	}
}

$mobile: "screen and (max-width : 880px)";
$desktop: "screen and (min-width : 881px)";

//	so .view is max-width: 800px
//	and .sidebar is width: 240px
//	so at some point while still $desktop (gt 880px)
//	you can have a situation where .view gets crunched
//	use this to adjust .view's width/max-width for those situations
$crunch: "screen and (min-width : 880px) and (max-width: 1100px)";

//	fonts/text
////////////////////////////////////////////////////////////////////////////////
$large-font: 21px;
$medium-font: 16px;
$small-font: 13px;
$fine-font: 11px;

//	magic numbers
////////////////////////////////////////////////////////////////////////////////
$header-height: 50px;
$nav-height: 45px;

$sidebar-width: 240px;
$sidebar-padding: 16px;

$table-row-padding: 15px;
$btn-tray-padding: 10px;

$big-bump: 46px;
$lil-bump: 26px;

$medium-icon: 21px;
$fine-icon: 7px;

$popup-index: 6;
$dropdown-index: 5;
$header-index: 4;
$nav-index: 3;
$view-head-index: 2;
$table-head-index: 1;

//	colors
//	these turn up a lot
//	avoiding using colors other than the ones listed below, #fff, and #000
//	the one exception is html/body background color which follows
////////////////////////////////////////////////////////////////////////////////
$green: #acd038;
$orange: #e76d24;
$red: #c51313;

$bright-blue: #4f7abd;
$light-blue: #243774;
$dark-blue: #1c335d;

$grey: #cbcaca;
$bright-grey: #bac7da;
$light-grey: #4c5269;
$dark-grey: #293147;

@mixin text-shadow {
  text-shadow: 0 1px #000;
}

//	base
//	note that first things we do:
//	1. border-box,
//	2. make all cursors inherit, later we set body cursor to default
//	   so basically you must explicitly set the cursor of all elements
//	3. user-select: none and all it's prefixes so you can't select/copy text
////////////////////////////////////////////////////////////////////////////////
* {
	box-sizing: border-box; 
	-moz-box-sizing: border-box;
	cursor: inherit;
	font-size-adjust: 0.55;
	text-rendering: optimizeLegibility;	
	user-select: none;
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
}

input {
  user-select: text;
  -webkit-user-select: text;
  -khtml-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
}

html {
	//	we might want to replace this with a css gradient or svg later
	background: #04122a url(/images/gradient.png) no-repeat;
	height: 100%;
	width: 100%;

  @include breakpoint($mobile) {
    background-position: top center;
  }

	@include breakpoint($desktop) {
		background-position: top left calc(50% + 120px);
	}
}

body {
	color: #fff;
	cursor: default;
	font-family: Helvetica, Arial, sans-serif;
	font-size: $medium-font;
	font-weight: lighter;
	height: 100%;
	line-height: 1;
	width: 100%;
}

a {
	color: inherit;
	text-decoration: inherit;
}

//	commonly occuring elements
////////////////////////////////////////////////////////////////////////////////
@mixin row($min-height: 0) {
	display: block;
	width: 100%;
	min-height: $min-height;
}

//	header
////////////////////////////////////////////////////////////////////////////////

.header {
  background-color: transparent;
  background-image: url(/images/header.png);
  background-repeat: no-repeat;
  background-position: center center;
  background-size: 100% 100%;

	height: $header-height;
	position: fixed;
	width: 100%;
	z-index: $header-index;

	.tracvision-logo {
    background-color: transparent;
    background-image: url(/images/tracvision-logo.svg);
    background-repeat: no-repeat;
    background-position: center center;
    background-size: 90% auto;

		height: 100%;
		margin: auto;
		width: 150px;
    cursor: pointer;
	}

  @mixin header-btn {
    cursor: pointer;
    font-size: $small-font;
    height: 100%;
    text-align: center;
    width: $header-height;
  }

	.status-btn {
    @include header-btn;
    float: left;

    .status-light {
      @include text-shadow;
      background-color: $light-grey;
      display: inline-block;
      font-size: $fine-font * 0.75;
      height: 22px;
      line-height: 23px;
      margin: 7px 3px 4px 0;
      text-align: center;
      vertical-align: top;
      width: 10px;

      &.\$green { background-color: $green; }
      &.\$orange { background-color: $orange; }
      &.\$red { background-color: $red; }
      &.\$off { background-color: $light-grey; }    
    }
	}

	.nav-btn {
    @include header-btn;
    float: right;

    @include breakpoint($desktop) {
      display: none;
    }

    .nav-light {
      background-color: #fff;
      display: inline-block;
      height: 10px;
      margin: 7px 3px 2px 0;
      width: 10px;
    }

    .nav-light:nth-child(n+3) {
      margin-top: 0;
    }
	}
}

//  status
////////////////////////////////////////////////////////////////////////////////

.status {
  position: fixed;
  top: $header-height;
  width: 100%;
  z-index: $header-index;
  height: 0;
  overflow: hidden;
  transition: height .3s;

  &.\$expanded {
    height: 100%;
  }

  .status-label {
    background-color: #000;
    line-height: 1.4;
    padding: 1em;
  }

  .status-label+.status-label {
    padding-top: 0;
  }

  .\$green { color: $green; }
  .\$orange { color: $orange; }
  .\$red { color: $red; }
}

// nav
////////////////////////////////////////////////////////////////////////////////
.nav {
  $nav-btns:
    //  name desktop-width mobile-width
    home 17px 18px,
    sat 18px 16.5px,
    autoswitch 19px 15.5px,
    settings 17px 17px,
    updates 19px 19px,
    support 13px 13px,
    satfinder 21px 21px;

  @include breakpoint($mobile) {
    height: 0;
    overflow: hidden;
    padding-bottom: 0%;
    position: fixed;
    top: $header-height;
    transition: height .3s;
    width: 100%;
    z-index: $nav-index;

    //  clear fix
    &:after {
      content:"";
      display:table;
      clear:both;
    }

    &.\$expanded {
      height: 100%;
    }

    @each $nav-btn in $nav-btns {
      $btn-name: nth($nav-btn, 1);
      $icon-width: unquote(nth($nav-btn, 3)/21px*50+'%');
      .#{$btn-name}-btn {
        // background: #000 url(/images/#{$btn-name}-icon-white.svg) no-repeat top 35% center/$icon-width;
        background-color: #000;
        background-image: url(/images/#{$btn-name}-icon-white.svg);
        background-repeat: no-repeat;
        background-position: 50% 35%;
        background-size: $icon-width auto;
        cursor: pointer;
        display: block;
        float: left;
        padding: 22% 0 5%;
        text-align: center;
        width: 33%;

        //  for some reason, this doesn't fill the screen width on safari
        //  even though 33 + 34 + 33 = 100%
        &:nth-child(3n + 2) {
          width: 34%;
        }

        @if $btn-name == satfinder {
          width: 100%;
          padding: 10% 0;
          background-position: 10.5% 50%;
          background-size: 15% auto;
        }
      }
    }
  }

  @include breakpoint($desktop) {
  	background: #000;
  	height: $nav-height;
  	position: fixed;
  	top: $header-height;
  	width: 100%;
  	z-index: $nav-index;

  	@each $nav-btn in $nav-btns {
  		$btn-name: nth($nav-btn, 1);
  		$icon-width: nth($nav-btn, 2);
  		.#{$btn-name}-btn {
  			background: transparent url(/images/#{$btn-name}-icon-grey.svg) no-repeat left 10px center/$icon-width $medium-icon;
  			color: $bright-grey;
  			cursor: pointer;
  			display: inline-block;
  			height: 100%;
  			padding: 16px 15px 0 ($icon-width + 20px);

  			@if $btn-name == home {
  				background-position: left 20px center;
  				padding-left: ($icon-width + 30px);
  			}

  			&:hover,
  			&.\$selected {
  				background-image: url(/images/#{$btn-name}-icon-white.svg);
  				color: #fff;
  			}
  		}
  	}
  }

  .satfinder-btn:not(.\$available) {
    display: none;
  }
}

//	base mixins
////////////////////////////////////////////////////////////////////////////////

//	simple vendor prefixes mixin
@mixin prefix($property, $value) {
	-webkit-#{$property}: #{$value};
	-ms-#{$property}: #{$value};
	-moz-#{$property}: #{$value};
	-o-#{$property}: #{$value};
	#{$property}: #{$value};
}

@mixin ellipsis($width: 100%) {
	// display: inline-block;
	max-width: $width;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;	
}

//	clearfix
@mixin clearfix {
	&:after {
		content:"";
		display:table;
		clear:both;
	}
}

//	bg img mixin
//	use for icons
//	defaults to the most common icon size
@mixin bgimg($img, $pos: center center, $w: $medium-icon, $h: $medium-icon) {
	background-image: url(/images/#{$img}.svg);
	background-position: $pos;
	background-repeat: no-repeat;
	background-size: $w $h;
	min-height: $w;
	min-width: $h;
}

//	we rely on display: inline-block for this
//	make sure you clear the white space of your split elements
@mixin split($count, $gutter, $class: false) {
	$unguttered: 100/$count + unquote('%');
	display: inline-block;
	width: calc(#{$unguttered} - #{$gutter - $gutter/$count});
	margin-bottom: $gutter;
	margin-left: $gutter;

	//	use .first
	@if $class {
		$n: '.first';
		@for $i from 1 through $count {
			$n: $n+'+'+$class;
		}		
		&.first { margin-left: 0; }
		&#{$n} { margin-left: 0; }
	}
}

//	fixed header tables:
//	there is a javascript dependency here
//	use divs, use css to build the table, make the column align
//	by explicitly setting width on table-col, which has overflow: hidden
//	then make your table-head position: absolute with a higher z-index than
// 	table-row and reposition the table-head with js on scroll
//	use .\\#table-head in js
@mixin table {
	width: 100%;
	position: relative;

  .table-head {
    @include table-head;
  }

  .table-row {
    @include table-row;
  }

  .table-col {
    @include table-col;
  }
}

//	don't forget to adjust table-row so that
//	it has a margin-top equal to the height of table-head
//	in your custom table scss if your table have a table-head
@mixin table-row {
	@include row($big-bump);
	border-bottom: 1px solid $bright-blue;
	position: relative;
	vertical-align: middle;	
}

//	customize .table-head in your custom table classes
@mixin table-head {
	@include table-row;
	position: absolute;
	z-index: $table-head-index;
}

@mixin table-col {
	display: inline-block;
	height: 100%;
	overflow: hidden;
	padding: $table-row-padding;
	vertical-align: middle;
}

@mixin grey-table {
	@include table;

	.table-head {
		@include table-head;
		background-color: $dark-grey;
	}

	.table-row {
		@include table-row;
		background-color: $dark-grey;
	}

	.table-col {
		@include table-col;
	}
}

@mixin blue-table {
	@include table;

	.table-head {
		@include table-head;
		background-color: $light-blue;
	}

	.table-row {
		@include table-row;
		background-color: $light-blue;
		&.\$selected { background-color: $bright-blue; }
	}

	.table-col {
		@include table-col;
	}
}

@mixin alt-table {
	@include table;

	.table-head {
		@include table-head;
		background-color: $light-blue;
	}

	.table-row {
		@include table-row;
		&:nth-child(odd) { background-color: $light-grey; }
		&:nth-child(even) { background-color: $dark-grey; }
	}

	.table-col {
		@include table-col;
	}
}

//	we're using .back-btn for all the close/back buttons
//	.back-btn is different than .prev-btn
//	use these mixins to switch between the different types (back vs close - one
//	has an arrow pointing left, the other has an x icon)
@mixin back-btn {
	@include bgimg('prev-icon-blue', left 10px center);
	cursor: pointer;
	display: block;
	height: $big-bump;
	left: 0;
	position: absolute;
	top: 0;
	width: 100%;
}

@mixin close-btn {
	@include bgimg('x-icon-blue');
	cursor: pointer;
	display: block;
	height: $big-bump;
	position: absolute;
	right: 0;
	top: 0;
	width: $big-bump;
}

@mixin desktop-view-head {
	font-size: $large-font;
	margin: 30px 0;
	text-align: center;
}

@mixin mobile-view-head {
	background-color: #000;
	border-bottom: 1px solid $bright-blue;
	font-size: $large-font;
	left: 0;
	line-height: $big-bump;
	margin: 0 0 $big-bump;
	position: fixed;
	right: 0;
	text-align: center;
	top: $header-height;
	z-index: $view-head-index;	
}

@mixin popup-view-head {
	@include mobile-view-head;
	position: absolute;
	top: 0;
}

@mixin desktop-btn-tray {
	border-top: 1px solid $bright-blue;
	display: inline-block;
	padding: 30px 0 $table-row-padding * 2;
	width: 100%;

	.block-btn {
		float: right;
		margin-left: $table-row-padding;
		min-width: 130px;
		text-align: center;
	}
}

@mixin mobile-btn-tray {
	background-color: #000;
	bottom: 0;
	padding: 10px;
	position: fixed;
	left: 0;
	right: 0;
  height: 60px;
}

@mixin popup-btn-tray {
	@include desktop-btn-tray;
	border-top: 0;
	position: absolute;
	bottom: 0;
	padding: $table-row-padding * 2;
}

//	desktop view
//	not the popups, not the sidebar
//	just the regular views that fill most of the right side of the screen
//	at desktop sizes
@mixin desktop-view {
	bottom: 0;
	left: $sidebar-width;
	margin: auto;
	position: absolute;
	right: 0;
	top: $header-height + $nav-height;
	max-width: 800px;

	@include breakpoint($crunch) {
		max-width: 600px;
	}

	.view-head, .spin-view-head {
		@include desktop-view-head;
	}

	.back-btn {
		display: none;
	}

	.btn-tray {
		@include desktop-btn-tray;
	}
}

@mixin mobile-view {
	bottom: 0;
	left: 0;
	position: absolute;
	right: 0;
	top: $header-height + $big-bump;	//	height of mobile-view-header

	.view-head, .spin-view-head {
		@include mobile-view-head;
	}

	.back-btn {
		@include back-btn;
	}

	.btn-tray {
		@include mobile-btn-tray;
	}
}

@mixin sidebar-view {
	background: #000;
	bottom: 0;
	left: 0;
	position: absolute;
	right: auto;
	top: $header-height + $nav-height;
	width: $sidebar-width;
}

@mixin popup-view {
	background-color: transparentize(#000, .5);
	bottom: 0;
	left: 0;
	position: fixed;
	right: 0;
	top: 0;
	z-index: $popup-index;

	.popup-guts,
  .dropdown-guts {
    //  idk i didnt like the color name
		background-color: #101f30;
		box-shadow: 0 0 100px #000;
		display: block;
		height: 600px;
		left: 50%;
		margin: -300px -400px;
		padding-top: $big-bump;
		position: absolute;
		top: 50%;
		width: 800px;
	}

	.view-head, .spin-view-head {
		@include popup-view-head;
	}

	.back-btn {
		@include close-btn;
	}

	.btn-tray {
		@include popup-btn-tray;
	}
}

//	hide these
//	later we'll display them in each page's scss
//	based on the body class (routing)
.sidebar,
.view,
.spin-view,
.popup,
.dropdown {
	display: none;
}

.sidebar {
	@include breakpoint($desktop) {
		@include sidebar-view;
	}

	@include breakpoint($mobile) {
		@include mobile-view;
		top: $header-height;
	}

	.sidebar-chunk {
		border-bottom: 1px solid $bright-blue;
		padding: $sidebar-padding;
		position: relative;

    .label+.label {
      margin-top: 10px;
    }

		.sidebar-chunk-head {
			color: $bright-grey;
			padding-bottom: inherit;
		}
	}

  //  autoswitch sidebar view for home/autoswitch pages
  .master-chunk {
    .label {
      @include bgimg('autoswitch-icon-white', left center);
      padding: 4px 30px 0;
      margin-top: -6px;
      margin-bottom: 4px;
    }

    .master-btn {
      bottom: 0;
      display: inline-block;
      font-size: $small-font;
      padding: 6px 10px;
      position: absolute;
      right: 0;
      width: auto;
    }    
  }

	//	for the installed sat view
	.sat-status {
		bottom: $sidebar-padding;
		position: absolute;
	}

	.sat-signal {
    background-color: transparent;
    background-image: url(/images/sat-signal-0.svg);
    background-repeat: no-repeat;
    background-position: right center;
    background-size: 60px auto;

		height: 60px;
		margin-top: -$sidebar-padding;
		width: 100%;

		&.\$0 { background-image: url(/images/sat-signal-0.svg); }
		&.\$1 { background-image: url(/images/sat-signal-1.svg); }
		&.\$2 { background-image: url(/images/sat-signal-2.svg); }
		&.\$3 { background-image: url(/images/sat-signal-3.svg); }
		&.\$4 { background-image: url(/images/sat-signal-4.svg); }
		&.\$5 { background-image: url(/images/sat-signal-5.svg); }
	}
}

.view, .spin-view {
	@include breakpoint($desktop) {
		@include desktop-view;
	}

	@include breakpoint($mobile) {
		@include mobile-view;
	}
}

.popup {
	@include breakpoint($desktop) {
		@include popup-view;
	}

	@include breakpoint($mobile) {
		@include mobile-view;
	}
}

.dropdown {
  @include popup-view;

  .dropdown-guts {
    height: auto;
    min-height: auto;
    min-width: 280px;
    width: auto;
    margin: 0px 0px;
  }

  .table {
    @include blue-table;
    max-height: calc(400px - #{$big-bump});
    overflow: auto;
  }

  .table-col {
    @include table-col;
  }

  .table-row {
    @include table-row;
    cursor: pointer;
    
    .dropdown-icon {
      @include bgimg('radio-unchecked');
      display: inline-block;
      padding: 0;
      margin-left: 15px;
    }

    &.\$selected .dropdown-icon {
      @include bgimg('radio-checked');
    }
  }

  @include breakpoint($mobile) {
    .dropdown-guts {
      bottom: 0 !important;
      left: 0 !important;
      margin: 0 !important;
      min-width: 0 !important;
      right: 0 !important;
      top: auto !important;
    }
  }
}

//	this turned out to be really strange
//	and in general there are issues with <input>
.input {
	@include prefix(border-radius, 0);
	background-color: $light-grey;
	border: 1px solid #000;
	color: inherit;
	cursor: text;
	font-family: inherit;
	font-size: $medium-font;
	font-weight: inherit;
	margin: -7px -11px;
	outline: 0;
	padding: 4px 10px;
}

.toggle-btn {
	@include text-shadow;
	cursor: pointer;
	display: inline-block;

	.on, .off {
		float: left;
		padding: 5px 10px;
		text-align: center;
		width: 50%;
	}

	//	on
	&.\$on .on, .off {
		background-color: $bright-blue;
		border: 1px solid #fff;
	}

	//	off
	&.\$on .off, .on {
		border: 1px solid #000;
		background-color: $light-grey;
	}

	//	when in the sidebar
	.sidebar-chunk & {
		width: 100%;
	}
}

.block-btn {
	@include text-shadow;
	background-color: $bright-blue;
	cursor: pointer;
	display: inline-block;
	padding: 12px 17px;
	text-align: center;

	.sidebar & {
		display: block;
		margin: $sidebar-padding;
	}
}

.dropdown-btn {
	@extend .input;
	cursor: pointer;
	min-height: 16px + 12px;
	position: relative;

	.dropdown-icon {
		@include bgimg('down-icon-white', center center, $fine-icon);
		background-color: $bright-blue;
		position: absolute;
		top: 0;
		right: 0;
		height: $lil-bump;
		width: $lil-bump;
	}
}

.flashing-view {
  z-index: $nav-index;
  .popup-guts {
    background: #101f30;
    position: fixed;
    text-align: center;
    line-height: 1.6;
    padding: $big-bump;

    @include breakpoint($desktop) {
      padding-top: $big-bump * 2;
      width: 400px;
      height: 200px;
      margin-top: -100px;
      margin-left: -200px;
    }    

    @include breakpoint($mobile) {
      height: 100%;
      width: 100%;
    }
  }
}

@-webkit-keyframes spin {
  from { -webkit-transform: rotate(0deg);}
  to {   -webkit-transform: rotate(360deg);}
}

@-moz-keyframes spin {
  from { -moz-transform: rotate(0deg);}
  to {   -moz-transform: rotate(360deg);}
}

%animated-spinner {

  position: relative;
  overflow: hidden;

  &:after {
    content: "";
    position: absolute;
    width: 200%;
    height: 200%;
    top: -50%;
    left: -50%;

    background: transparent url(/images/spinner.png) no-repeat center center/50% 50%;

    -moz-animation: spin 1s steps(8) infinite;
    -webkit-animation: spin 1s steps(8) infinite;

  }
}

.popup-spinner {
  @extend %animated-spinner;
  display: block;
  background-color: #101f30;
  width: 100%;
  height: calc(100% - #{$big-bump});

  top: $big-bump;
  left: 0;
  z-index: 1;

  @include breakpoint($desktop) {
    position: absolute;    
    &:after { background-size: 200px 200px; }
  }

  @include breakpoint($mobile) {
    position: fixed;
    &:after { background-size: 200px 200px; }
  }
}